Loading required package: data.table
Read 66.8% of 987637 rowsRead 94.2% of 987637 rowsRead 987637 rows and 16 (of 16) columns from 0.123 GB file in 00:00:04
[1] "IN DEBUGGING MODE"
[1] "using  /scratch/PI/horence/gillian/SEQC_study_set/circpipe_SEQC/circReads/ids/SRR896750_1__output_FJ.txt"
[1] "IN DEBUGGING MODE"
Warning messages:
1: In if (my.names != "none") { :
  the condition has length > 1 and only the first element will be used
2: In `names<-.data.table`(`*tmp*`, value = c("id", "class", "pos",  :
  The names(x)<-value syntax copies the whole table. This is due to <- in R itself. Please change to setnames(x,old,new) which does not copy and is faster. See help('setnames'). You can safely ignore this warning if it is inconvenient to change right now. Setting options(warn=2) turns this warning into an error, so you can then use traceback() to find and change your names<- calls.
[1] "using  /scratch/PI/horence/gillian/SEQC_study_set/circpipe_SEQC/circReads/ids/SRR896750_output_RegIndel.txt  and  /scratch/PI/horence/gillian/SEQC_study_set/circpipe_SEQC/circReads/ids/SRR896750_output_FJIndels.txt"
[1] "IN DEBUGGING MODE"
[1] "IN DEBUGGING MODE"
Warning messages:
1: In if (my.names != "none") { :
  the condition has length > 1 and only the first element will be used
2: In `names<-.data.table`(`*tmp*`, value = c("id", "class", "pos",  :
  The names(x)<-value syntax copies the whole table. This is due to <- in R itself. Please change to setnames(x,old,new) which does not copy and is faster. See help('setnames'). You can safely ignore this warning if it is inconvenient to change right now. Setting options(warn=2) turns this warning into an error, so you can then use traceback() to find and change your names<- calls.
3: In if (my.names != "none") { :
  the condition has length > 1 and only the first element will be used
4: In `names<-.data.table`(`*tmp*`, value = c("id", "class", "pos",  :
  The names(x)<-value syntax copies the whole table. This is due to <- in R itself. Please change to setnames(x,old,new) which does not copy and is faster. See help('setnames'). You can safely ignore this warning if it is inconvenient to change right now. Setting options(warn=2) turns this warning into an error, so you can then use traceback() to find and change your names<- calls.
[1] "class info processed 987637" "class info processed 16"    
[1] "check if syntax for multiple makes sense"
Warning messages:
1: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScoreR2' then assigning NULL (deleting it).
2: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScore' then assigning NULL (deleting it).
[1] "finished circ_reads"
[1] "check if syntax for multiple makes sense"
Warning messages:
1: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScoreR2' then assigning NULL (deleting it).
2: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScore' then assigning NULL (deleting it).
[1] "finished decoy_reads"
[1] "check if syntax for multiple makes sense"
Warning messages:
1: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScoreR2' then assigning NULL (deleting it).
2: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScore' then assigning NULL (deleting it).
[1] "finished linear_reads"
[1] "finished anomaly_reads"
[1] "Finished reg indels"
[1] "check if syntax for multiple makes sense"
[1] "Finished FJ indels"
Warning messages:
1: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScoreR2' then assigning NULL (deleting it).
2: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScore' then assigning NULL (deleting it).
[1] "check if syntax for multiple makes sense"
[1] "ANOMALY fusions defined as FJ bad-- of any variety"
[1] "check if syntax for multiple makes sense"
                   id qual
 1: SRR896750.1389113    3
 2: SRR896750.1645654    4
 3: SRR896750.2113545   42
 4: SRR896750.3022265    0
 5: SRR896750.3885474   40
 6: SRR896750.4088925    0
 7:  SRR896750.487444    0
 8: SRR896750.5051100   42
 9: SRR896750.5100293    0
10: SRR896750.6070647   42
11: SRR896750.7213161   24
12:  SRR896750.883205   40
                                                           junction qualR2
 1:          chr4:ANP32C:165118159:-|chr15:ANP32A:69072812:-|fusion     42
 2:       chr2:FAHD2A:96072905:+|chr2:FAHD2B:97750014:-|strandcross     23
 3:           chr15:HERC2P3:20648624:-|chr15:HERC2P2:23313307:-|rev     31
 4: chr20:TGIF2-C20orf24:35238133:+|chr19:CCDC124:18053465:+|fusion     42
 5:   chr2:LOC150776:132277239:+|chr2:SMPD4:130910744:-|strandcross      0
 6:               chr1:ENO1:8938639:-|chr5:ELOVL7:60063730:-|fusion      3
 7:          chr22:LOC96610:22664248:+|chr10:BMS1:43319057:+|fusion     23
 8:           chr15:HERC2P3:20648624:-|chr15:HERC2P2:23313307:-|rev     14
 9:        chr16:PKD1P1:16417146:+|chr16:PKD1:2161872:-|strandcross      0
10:           chr15:HERC2P3:20648624:-|chr15:HERC2P2:23313307:-|rev     30
11:                 chr17:BPTF:65822453:+|chr17:AMZ2:66246329:+|reg     42
12:           chr15:HERC2P3:20648624:-|chr15:HERC2P2:23313307:-|rev      1
    is.pos overlap   lenAdjScore lenAdjScoreR2 is.anomaly
 1:      1      48 -1.500100e-01 -1.010101e-05          1
 2:      1      48 -1.000100e-01 -1.020510e-01          1
 3:      1      19 -1.694915e-05 -1.010101e-05          1
 4:      1      14 -2.400100e-01 -2.001000e-02          1
 5:      1      30 -5.001000e-02 -2.200100e-01          1
 6:      1      15 -2.400100e-01 -1.562656e-01          1
 7:      1      41 -2.245000e-01 -1.100100e-01          1
 8:      1      48 -1.010101e-05 -4.001000e-02          1
 9:      1      33 -1.700100e-01 -2.000100e-01          1
10:      1      30 -4.001000e-02 -1.020408e-05          1
11:      1      39 -7.596203e-02 -1.204819e-05          1
12:      1      22 -5.103061e-02 -1.020408e-05          1
Warning messages:
1: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScoreR2' then assigning NULL (deleting it).
2: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScore' then assigning NULL (deleting it).
3: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScoreR2' then assigning NULL (deleting it).
4: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScore' then assigning NULL (deleting it).
[1] "not using all data only 3 parameters"
[1] "calling linear decoy model"
[1] "1 total reads: 10032"
[1] "both negative 19 out of  32"
[1] "both positive 7458 out of  10000"
[1] "classification errors 2555 out of 10032 0.254685007974482"
                  Estimate  Std. Error    z value    Pr(>|z|)
(Intercept)    -1.59377110  2.05050841 -0.7772566 0.437007422
overlap        -0.01761762  0.04567447 -0.3857214 0.699703019
lenAdjScore    33.65754256 14.86632106  2.2640129 0.023573322
qual            0.03062075  0.03000529  1.0205115 0.307485926
lenAdjScoreR2 -10.23704786 10.04418237 -1.0192017 0.308107214
qualR2          0.07936625  0.02991154  2.6533655 0.007969353
[1] "2 total reads: 10032"
[1] "both negative 0 out of  32"
[1] "both positive 0 out of  10000"
[1] "classification errors 10032 out of 10032 1"
                  Estimate Std. Error    z value  Pr(>|z|)
(Intercept)    -5.33144779  7.7578919 -0.6872289 0.4919385
overlap        -0.01952425  0.1802863 -0.1082958 0.9137610
lenAdjScore    89.05106012 64.7301082  1.3757286 0.1689057
qual            0.08844165  0.1095196  0.8075415 0.4193546
lenAdjScoreR2 -21.39209097 36.5271409 -0.5856492 0.5581113
qualR2          0.21259218  0.1367663  1.5544189 0.1200845
[1] "before setnames"
[1] "junction" "numReads" "iter_2"  
[1] "after setnames"
[1] "junction"    "numReads"    "p_predicted"
Warning messages:
1: In eval(expr, envir, enclos) :
  non-integer #successes in a binomial glm!
2: In eval(expr, envir, enclos) :
  non-integer #successes in a binomial glm!
[1] "check if syntax for multiple makes sense"
Warning messages:
1: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScoreR2' then assigning NULL (deleting it).
2: In `[.data.table`(dt, , `:=`(pos = NULL, aScoreR2 = NULL, numNR2 = NULL,  :
  Adding new column 'adjScore' then assigning NULL (deleting it).
Error in rbindlist(l, use.names, fill) : 
  Item 2 has 9 columns, inconsistent with item 1 which has 12 columns. If instead you need to fill missing columns, use set argument 'fill' to TRUE.
Calls: rbind -> rbind -> <Anonymous> -> rbindlist
Execution halted
